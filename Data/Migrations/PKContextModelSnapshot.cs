// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PKWebApp.Data;

namespace PKWebApp.Migrations
{
    [DbContext(typeof(PKContext))]
    partial class PKContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PKWebApp.Data.Entities.ClientContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClientEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientPhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ClientContacts");
                });

            modelBuilder.Entity("PKWebApp.Data.Entities.CoreService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoreServiceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoreServiceTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoreServices");
                });

            modelBuilder.Entity("PKWebApp.Data.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CoreServiceId")
                        .HasColumnType("int");

                    b.Property<int>("ServicePriceTag")
                        .HasColumnType("int");

                    b.Property<string>("ServiceTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoreServiceId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("PKWebApp.Data.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientContactInfoId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientContactInfoId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("PKWebApp.Data.Entities.Service", b =>
                {
                    b.HasOne("PKWebApp.Data.Entities.CoreService", "CoreService")
                        .WithMany("Services")
                        .HasForeignKey("CoreServiceId");
                });

            modelBuilder.Entity("PKWebApp.Data.Entities.Ticket", b =>
                {
                    b.HasOne("PKWebApp.Data.Entities.ClientContactInfo", "ClientContactInfo")
                        .WithMany()
                        .HasForeignKey("ClientContactInfoId");

                    b.HasOne("PKWebApp.Data.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId");
                });
#pragma warning restore 612, 618
        }
    }
}
